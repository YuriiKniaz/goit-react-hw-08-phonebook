{"version":3,"file":"static/js/324.0c7fd963.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/App.module.css?6c4d","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selector.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"App_block__UaGI4\",\"firstTitle\":\"App_firstTitle__yv2Mt\",\"secondTitle\":\"App_secondTitle__WQM4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"lable\":\"ContactForm_lable__W7bCm\",\"formInput\":\"ContactForm_formInput__GszVU\",\"fromInput\":\"ContactForm_fromInput__vg-K6\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","\n\nexport const selectContacts = state => state.contacts.contacts  \nexport const selectFilter = state => state.filter.filter  \nexport const selectLoading = state => state.contacts.isLoading \nexport const selectError = state => state.contacts.isError\n    \n\n\n// export const selectFilteredContacts = createSelector(\n//     [selectContacts, selectFilter],\n//     (contacts, filter) => {\n//     contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())\n// );\n// }\n// ) ","import form from './ContactForm.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selector';\nimport { addContactsThunk } from 'redux/contactsSlice';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onInputChange = ({ target: { name, value } }) => {\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const fromReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n    const isExist = contacts.some(\n      con => con.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${newContact.name} is already exist`);\n      return;\n    }\n    dispatch(addContactsThunk(newContact));\n    fromReset();\n  };\n\n  return (\n    <form className={form.form} onSubmit={onSubmit}>\n      <label className={form.lable}>\n        Name:\n        <input\n          className={form.formInput}\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={onInputChange}\n          value={name}\n        />\n      </label>\n      <label className={form.lable}>\n        Number:\n        <input\n          className={form.formInput}\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onInputChange}\n          value={number}\n        />\n      </label>\n      <button className={form.formBtn} type=\"submit\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import formFiter from '../ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selector';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <input\n      className={formFiter.formInput}\n      type=\"text\"\n      name=\"filter\"\n      onChange={onFilter}\n      value={filter}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\",\"listPrg\":\"ContactList_listPrg__-EZPk\",\"listBtn\":\"ContactList_listBtn__LNeu6\"};","import { Loader } from 'components/Loader/Loader';\nimport list from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk, fetchContactsThunk } from 'redux/contactsSlice';\nimport {\n  selectLoading,\n  selectError,\n  selectFilter,\n  selectContacts,\n} from 'redux/selector';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const isError = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const getFilteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const onDeleteContacts = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {isError && <p>{isError}</p>}\n      <ul className={list.list}>\n        {getFilteredContacts.map(({ id, name, number }) => (\n          <li className={list.listItem} key={id}>\n            <p className={list.listPrg}>\n              {name}: {number}\n            </p>\n            <button\n              className={list.listBtn}\n              type=\"submit\"\n              onClick={() => onDeleteContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport app from '../components/App.module.css';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <div className={app.block}>\n      <h2 className={app.firstTitle}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={app.secondTitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectLoading","isLoading","selectError","isError","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","onInputChange","target","value","className","form","onSubmit","e","preventDefault","newContact","some","con","toLowerCase","alert","addContactsThunk","type","title","required","onChange","Filter","formFiter","setFilter","ContactList","useEffect","fetchContactsThunk","getFilteredContacts","contact","includes","Loader","list","map","id","onClick","deleteContactThunk","onDeleteContacts","app"],"sourceRoot":""}
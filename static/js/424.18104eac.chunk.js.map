{"version":3,"file":"static/js/424.18104eac.chunk.js","mappings":"+OACA,GAAgB,KAAO,2BAA2B,UAAY,gCAAgC,SAAW,+BAA+B,UAAY,gCAAgC,QAAU,+B,SC8D9L,EA1DqB,WACnB,OAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,kBAAMC,UAAWC,EAAAA,KAAUC,SAAUR,GANtB,SAAAS,GACfL,GAASM,EAAAA,EAAAA,IAAYD,IACrBR,GACD,IAGC,WACE,mBAAOK,UAAWC,EAAAA,UAAlB,WACE,iBAAMD,UAAWC,EAAAA,SAAjB,SAA+B,YAC/B,kCACED,UAAWC,EAAAA,WACPR,EAAS,QAAS,CAAEY,UAAU,KAFpC,IAGEC,KAAK,WAENV,EAAOW,QACN,iBAAMP,UAAWC,EAAAA,eAAjB,SAAqC,+BAGzC,mBAAOD,UAAWC,EAAAA,UAAlB,WACE,iBAAMD,UAAWC,EAAAA,SAAjB,SAA+B,WAC/B,kCACED,UAAWC,EAAAA,WACPR,EAAS,OAAQ,CAAEY,UAAU,KAFnC,IAGEC,KAAK,UAENV,EAAOY,OACN,iBAAMR,UAAWC,EAAAA,eAAjB,SAAqC,+BAGzC,mBAAOD,UAAWC,EAAAA,UAAlB,WACE,iBAAMD,UAAWC,EAAAA,SAAjB,SAA+B,eAC/B,kCACED,UAAWC,EAAAA,WACPR,EAAS,WAAY,CAAEY,UAAU,KAFvC,IAGEC,KAAK,cAENV,EAAOa,WACN,iBAAMT,UAAWC,EAAAA,eAAjB,SAAqC,+BAIzC,mBAAQD,UAAWC,EAAAA,QAAaK,KAAK,SAArC,SAA8C,cAKnD,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/RegisterPage.module.css?8287","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterPage_form__WgwJJ\",\"formLabel\":\"RegisterPage_formLabel__yVCFX\",\"fromSpan\":\"RegisterPage_fromSpan__rUS9V\",\"fromInput\":\"RegisterPage_fromInput__3khoQ\",\"fromBtn\":\"RegisterPage_fromBtn__GpYqh\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { signUpThunk } from 'redux/authorizationSlice';\nimport reg from './RegisterPage.module.css';\nconst RegisterPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(signUpThunk(data));\n    reset();\n  };\n\n  return (\n    <form className={reg.form} onSubmit={handleSubmit(onSubmit)}>\n      <label className={reg.formLabel}>\n        <span className={reg.fromSpan}>Email:</span>\n        <input\n          className={reg.fromInput}\n          {...register('email', { required: true })}\n          type=\"email\"\n        />\n        {errors.email && (\n          <span className={reg.fromInputError}>This field is required</span>\n        )}\n      </label>\n      <label className={reg.formLabel}>\n        <span className={reg.fromSpan}>Name:</span>\n        <input\n          className={reg.fromInput}\n          {...register('name', { required: true })}\n          type=\"text\"\n        />\n        {errors.name && (\n          <span className={reg.fromInputError}>This field is required</span>\n        )}\n      </label>\n      <label className={reg.formLabel}>\n        <span className={reg.fromSpan}>Password:</span>\n        <input\n          className={reg.fromInput}\n          {...register('password', { required: true })}\n          type=\"password\"\n        />\n        {errors.password && (\n          <span className={reg.fromInputError}>This field is required</span>\n        )}\n      </label>\n\n      <button className={reg.fromBtn} type=\"submit\">\n        Sign Up\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","className","reg","onSubmit","data","signUpThunk","required","type","email","name","password"],"sourceRoot":""}
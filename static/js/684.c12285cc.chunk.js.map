{"version":3,"file":"static/js/684.c12285cc.chunk.js","mappings":"+OACA,GAAgB,KAAO,wBAAwB,UAAY,6BAA6B,SAAW,4BAA4B,UAAY,6BAA6B,QAAU,4B,SCmDlL,EA/CkB,WAChB,OAKIA,EAAAA,EAAAA,MAJFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,kBAAMC,UAAWC,EAAAA,KAAYC,SAAUR,GANxB,SAAAS,GACfL,GAASM,EAAAA,EAAAA,IAAWD,IACpBR,GACD,IAGC,WACE,mBAAOK,UAAWC,EAAAA,UAAlB,WACE,iBAAMD,UAAWC,EAAAA,SAAjB,SAAiC,YACjC,kCACED,UAAWC,EAAAA,WACPR,EAAS,QAAS,CAAEY,UAAU,KAFpC,IAGEC,KAAK,WAENV,EAAOW,QACN,iBAAMP,UAAWC,EAAAA,eAAjB,SAAuC,+BAG3C,mBAAOD,UAAWC,EAAAA,UAAlB,WACE,iBAAMD,UAAWC,EAAAA,SAAjB,SAAiC,eACjC,kCACED,UAAWC,EAAAA,WACPR,EAAS,WAAY,CAAEY,UAAU,KAFvC,IAGEC,KAAK,cAENV,EAAOY,WACN,iBAAMR,UAAWC,EAAAA,eAAjB,SAAuC,+BAI3C,mBAAQD,UAAWC,EAAAA,QAAeK,KAAK,SAAvC,SAAgD,cAKrD,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage.module.css?247b","pages/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginPage_form__YME1y\",\"formLabel\":\"LoginPage_formLabel__fwtux\",\"fromSpan\":\"LoginPage_fromSpan__pHaW0\",\"fromInput\":\"LoginPage_fromInput__03qcq\",\"fromBtn\":\"LoginPage_fromBtn__r6EGL\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { logInThunk } from 'redux/authorizationSlice';\nimport login from './LoginPage.module.css';\nconst LoginPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(logInThunk(data));\n    reset();\n  };\n\n  return (\n    <form className={login.form} onSubmit={handleSubmit(onSubmit)}>\n      <label className={login.formLabel}>\n        <span className={login.fromSpan}>Email:</span>\n        <input\n          className={login.fromInput}\n          {...register('email', { required: true })}\n          type=\"email\"\n        />\n        {errors.email && (\n          <span className={login.fromInputError}>This field is required</span>\n        )}\n      </label>\n      <label className={login.formLabel}>\n        <span className={login.fromSpan}>Password:</span>\n        <input\n          className={login.fromInput}\n          {...register('password', { required: true })}\n          type=\"password\"\n        />\n        {errors.password && (\n          <span className={login.fromInputError}>This field is required</span>\n        )}\n      </label>\n\n      <button className={login.fromBtn} type=\"submit\">\n        Sign In\n      </button>\n    </form>\n  );\n};\n\nexport default LoginPage;\n"],"names":["useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","className","login","onSubmit","data","logInThunk","required","type","email","password"],"sourceRoot":""}